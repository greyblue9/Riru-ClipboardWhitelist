name: Core

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        fetch-depth: 0
    - name: set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build
      run: |
        set -x -v
        rm -vrf -- /usr/local/lib/android/sdk/ndk-bundle
        ln -sf /opt/hostedtoolcache/ndk/r21/x64 /usr/local/lib/android/sdk/ndk-bundle
        ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk-bundle
        ANDROID_NDK_LATEST_HOME=/usr/local/lib/android/sdk/ndk-bundle
        export ANDROID_NDK_HOME ANDROID_NDK_LATEST_HOME
        # NDK from ndk.dir at /usr/local/lib/android/sdk/ndk-bundle 
        # had version [21.4.7075529]
        # which disagrees with
        # android.ndkVersion [23.0.7123448]
        NDK_VER=23.0.7123448
        export NDK_VER
        set +e
        ANDROID_NDK_HOME="${ANDROID_NDK_HOME:-/opt/hostedtoolcache/ndk/r21/x64}"
        mkdir -p /home/runner/work/Riru-ClipboardWhitelist/Riru-ClipboardWhitelist
        NDK_VER2="$( find "$ANDROID_NDK_HOME" -regextype egrep -iregex '.*[^0-9.]2[13]\.[0-9]\.[0-9][^/]*$' | head -1 )"
        echo "$NDK_VER_2"
        typeset -p -x
        cat /home/runner/.m2/settings.xml
        NDK_DIR="$ANDROID_NDK_HOME"
        NDK_ROOT="$ANDROID_NDK_HOME"
        ANDROID_NDK_LATEST_HOME="$ANDROID_NDK_HOME"
        export NDK_VER NDK_DIR NDK_ROOT ANDROID_NDK_HOME ANDROID_NDK_LATEST_HOME
        cur="${PWD}"; cur="${cur: 1}"; cur="${cur%%/*}"; base="/$cur";
        if false && [ x"$NDK_VER" != x ]; then
          find "/home/runner" /usr/local/ /opt/hostedtoolcache/ -xdev -noleaf -regextype egrep \
             -iregex '.*(android|gradle|ndk).*' -a -type f \
             -a -exec grep  --binary-files=without-match  -lwe '21[.][0-9]\+[.][0-9]\+' -- {} \; \
          | sed -r -u -e 'w /dev/stderr' -e ';' \
          | xargs -d $'\n' sed -s -r \
              -e ':a s~(^|[^0-9.])(21\.[0-9]\.[0-9]{4,})~\1'"$NDK_VER"'~g; ' \
              -i -- ;
        fi
        echo $'\r\n'"ndk.dir=$ANDROID_NDK_HOME" >> local.properties
        echo $'\r\n'"android.ndkVersion=$NDK_VER" >> local.properties
        echo $'\r\n'"ndk.dir=$ANDROID_NDK_HOME"$'\r\n'ndk.ver=$NDK_VER"$'\r\n'ndk.version=$NDK_VER"$'\r\n'android.ndk.dir=$ANDROID_NDK_HOME"$'\r\n'android.ndk.version=$NDK_VER"$'\r\n' | tee -a  /home/runner/work/Riru-ClipboardWhitelist/Riru-ClipboardWhitelist/gradle.properties >> local.properties
        echo $'\r\nstorePassword=changeit\r\nkeyPassword=changeit\r\nkeyAlias=testkey\r\nstoreFile='"$( find "$JAVA_HOME" -name security | head -1 )"$'/jssecerts'$'\r\n' > /home/runner/work/Riru-ClipboardWhitelist/Riru-ClipboardWhitelist/keystore.properties
        echo $'\norg.gradle.caching=true' >> gradle.properties
        echo $'\norg.gradle.parallel=true' >> gradle.properties
        echo $'\norg.gradle.vfs.watch=false' >> gradle.properties
        echo $'\norg.gradle.jvmargs=-Xmx2048m' >> gradle.properties
        ./gradlew --stacktrace \
           || ./gradlew  build \
           || ./gradlew  configure \
           || ./gradlew  app \
           || ./gradlew  zipAll \
           || find $( pwd ) -name "*.gradle" -exec bash -c \
              'for f in "$@"; do fn="${f##*/}"; dir="${f: 0:${#f}-${#fn}}"; dir="${dir%%/}"; cd "$dir" || continue; echo "*** ENTERED DIR: $dir ***"; gradle build || '"$PWD"'/gradlew build; echo $?; done' -- "{}" + \
              ;
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: mappings
        path: |
          core/build/outputs/*
