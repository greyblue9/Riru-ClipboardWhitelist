name: Core

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Set up NDK r23
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r23
        add-to-path: true
    - name: Build gradle
      run: |
        set -x -v
        set +e
        mkdir -p /home/runner/work/_temp/keystore/
        export PW=changeit
        export SIGNING_STORE_PASSWORD=changeit
        export SIGNING_KEY_ALIAS=example.com
        export SIGNING_KEY_PASSWORD=changeit
        export KEYSTORE="/home/runner/work/_temp/keystore/example.com.jks"
        export NDK_VER=23.0.7123448
        export ANDROID_NDK_LATEST_HOME="/opt/hostedtoolcache/ndk/r${NDK_VER%%.*}"
        export ANDROID_NDK_HOME="/opt/hostedtoolcache/ndk/r${NDK_VER%%.*}"
        export NDK_DIR="$ANDROID_NDK_HOME"
        export NDK_ROOT="$ANDROID_NDK_HOME"
        keytool -genkeypair -v -alias "$SIGNING_KEY_ALIAS" -dname "CN=$SIGNING_KEY_ALIAS, OU=Example Org, O=Example Company, L=San Francisco, ST=California, C=US" -keystore "$KEYSTORE" -keypass:env PW -storepass:env PW -keyalg EC -keysize 256 -validity 385
        echo "$SIGNING_STORE_PASSWORD"$'\r\n' | keytool -keystore "$KEYSTORE" -keypass:env PW -storepass:env PW  -importkeystore -srckeystore "$KEYSTORE" -destkeystore "$KEYSTORE" -deststoretype pkcs12;
        cp -vf -- "$KEYSTORE" /home/runner/.keystore
        echo $'\r\nandroid.ndkVersion='"$NDK_VER"$'\r\nPkg.Revision='"$NDK_VER"$'\r\nPkg.Name=android.ndk\r\n' \
          | tee -a "/opt/hostedtoolcache/ndk/r${NDK_VER%%.*}/source.properties" \
          | tee -a /usr/local/lib/android/sdk/ndk-bundle/source.properties \
          | tee -a local.properties \
          ;
        mkdir -p ~/work/Riru-ClipboardWhitelist/Riru-ClipboardWhitelist
        typeset -p -x
        cat /home/runner/.m2/settings.xml
        echo $'\r\n'"ndk.dir=$ANDROID_NDK_HOME" >> local.properties
        echo $'\r\n'"android.ndkVersion=$NDK_VER" >> local.properties
        echo $'\r\n'"ndk.dir=$ANDROID_NDK_HOME"$'\r\n'ndk.ver=$NDK_VER"$'\r\n'ndk.version=$NDK_VER"$'\r\n'android.ndk.dir=$ANDROID_NDK_HOME"$'\r\n'android.ndk.version=$NDK_VER"$'\r\n' | tee -a  /home/runner/work/Riru-ClipboardWhitelist/Riru-ClipboardWhitelist/gradle.properties >> local.properties
        echo $'\norg.gradle.caching=true' >> gradle.properties
        echo $'\norg.gradle.parallel=true' >> gradle.properties
        echo $'\norg.gradle.vfs.watch=false' >> gradle.properties
        echo $'\norg.gradle.jvmargs=-Xmx2048m' >> gradle.properties
        ./gradlew module:assembleRelease
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: output
        path: |
          ./*
          build
          build/*
          build/**
          buildRelease
          buildRelease/*
          buildRelease/**
          module
          module/*
          module/**
          /home/runner/work/Riru-ClipboardWhitelist/Riru-ClipboardWhitelist/**
